import com.android.build.gradle.internal.tasks.AndroidTestTask

/*
 * TOZNY NON-COMMERCIAL LICENSE
 *
 * Tozny dual licenses this product. For commercial use, please contact
 * info@tozny.com. For non-commercial use, the contents of this file are
 * subject to the TOZNY NON-COMMERCIAL LICENSE (the "License") which
 * permits use of the software only by government agencies, schools,
 * universities, non-profit organizations or individuals on projects that
 * do not receive external funding other than government research grants
 * and contracts.  Any other use requires a commercial license. You may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at https://tozny.com/legal/non-commercial-license.
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations under
 * the License. Portions of the software are Copyright (c) TOZNY LLC, 2018.
 * All rights reserved.
 *
 */

apply plugin: 'com.android.application'

android {
  compileSdkVersion 27

  defaultConfig {
    applicationId "com.tozny.e3dbtest"
    minSdkVersion 16
    targetSdkVersion 27
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    vectorDrawables.useSupportLibrary = true
  }
  buildTypes {
    debug {
      buildConfigField "String", "REGISTRATION_TOKEN", "\"${regToken()}\""
      buildConfigField "String", "DEFAULT_API_URL", "\"${apiUrl()}\""
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField "String", "REGISTRATION_TOKEN", "\"${regToken()}\""
      buildConfigField "String", "DEFAULT_API_URL", "\"${apiUrl()}\""
    }
  }
  sourceSets.androidTest.java {
    srcDirs = ['src/androidTest/java', "${project(":common-test").projectDir}/src/test/java"]
  }
}

dependencies {
  implementation 'com.android.support:appcompat-v7:27.1.1'
  implementation 'com.android.support.constraint:constraint-layout:1.1.2'

  implementation 'com.android.support:design:27.1.1'
  implementation 'com.android.support:support-vector-drawable:27.1.1'
  implementation 'com.android.support:support-v4:27.1.1'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test:rules:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

  androidTestImplementation 'com.fasterxml.jackson.core:jackson-core:2.9.0'
  androidTestImplementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.0'
  androidTestImplementation 'com.fasterxml.jackson.core:jackson-databind:2.9.0'
  androidTestImplementation "commons-io:commons-io:2.6"
  androidTestImplementation "org.assertj:assertj-core:2.9.1"

  androidTestImplementation 'com.goterl.lazycode:lazysodium-android:2.5.0@aar'

  androidTestImplementation project(path: ':e3db')
  androidTestImplementation project(path: ':e3db-crypto-interface')
  androidTestImplementation(project(path: ':e3db-crypto-android')) {
    transitive = true
  }

  implementation project(path: ':e3db')
  implementation project(path: ':e3db-crypto-interface')
  implementation(project(path: ':e3db-crypto-android')) {
    transitive = true
  }
}

tasks.withType(AndroidTestTask) {
  onlyIf {
    if(regToken() == null)
      throw new Error("Registration token not set.")

    true
  }
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
