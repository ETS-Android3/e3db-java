/*
 * TOZNY NON-COMMERCIAL LICENSE
 *
 * Tozny dual licenses this product. For commercial use, please contact
 * info@tozny.com. For non-commercial use, the contents of this file are
 * subject to the TOZNY NON-COMMERCIAL LICENSE (the "License") which
 * permits use of the software only by government agencies, schools,
 * universities, non-profit organizations or individuals on projects that
 * do not receive external funding other than government research grants
 * and contracts.  Any other use requires a commercial license. You may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at https://tozny.com/legal/non-commercial-license.
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations under
 * the License. Portions of the software are Copyright (c) TOZNY LLC, 2018.
 * All rights reserved.
 *
 */

apply plugin: 'com.android.library'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'digital.wup.android-maven-publish'

android {
  compileSdkVersion 27
  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 27
  }
  sourceSets {
    main {
      manifest.srcFile ("${project(":e3db-crypto-android").projectDir}/src/main/AndroidManifest.xml")
      java {
        srcDirs "${project(":e3db-crypto-android").projectDir}/src/main/java",
            "${project(":e3db").projectDir}/src/main/java",
            "${project(":e3db-crypto-interface").projectDir}/src/main/java",
            "${project(":e3db-crypto-stub-plain").projectDir}/src/main/java"
      }
      res {
        srcDirs "${project(":e3db-crypto-android").projectDir}/src/main/res"
      }
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt')
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
  lintOptions {
    disable 'InvalidPackage' // jna package used by libsodium references some sun packages, but those will never be called.
  }
}

evaluationDependsOn(':publish')

task sourceJar(type: Jar) {
  from android.sourceSets.main.java.sourceFiles
}

publishing {
  publications {
    mavenAar(MavenPublication) {
      from components.android

      groupId project(":publish").ext.groupId
      artifactId 'e3db-client-android'
      version project(":publish").ext.version

      artifact sourceJar {
        classifier "sources"
      }

      repositories {
        maven {
          // url should be of the form "s3://<bucket>.s3-<region>.amazonaws.com/<folder>"
          url "${System.getenv('REPO_URL')}"
          credentials(AwsCredentials) {
            accessKey "${System.getenv('AWS_KEY')}"
            secretKey "${System.getenv('AWS_SECRET')}"
          }
        }
      }
    }
  }
}

dependencies {
  implementation project(":e3db-crypto-android").configurations.implementation.dependencies.matching { dep ->
    // exclude project dependencies - only include external, maven dependencies
    ExternalModuleDependency.class.isAssignableFrom(dep.class)
  }
  implementation project(":e3db").configurations.compile.dependencies.matching { dep ->
    // exclude project dependencies - only include external, maven dependencies
    ExternalModuleDependency.class.isAssignableFrom(dep.class)
  }
}
